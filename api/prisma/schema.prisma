datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Party {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rengas    Renga[]
  users     User[]
}

model Movie {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  movieDBId Int
  genres    String[]
  title     String
  year      Int
  rengas    Renga[]
}

model Renga {
  id          Int          @default(autoincrement()) @id
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  emojis      String[]
  submissions Submission[]
  movie       Movie        @relation(fields: [movieId], references: [id])
  movieId     Int
  author      User         @relation(fields: [authorId], references: [id])
  authorId    Int
  party       Party        @relation(fields: [partyId], references: [id])
  partyId     String
}

model User {
  id        Int      @default(autoincrement()) @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username  String
  party     Party    @relation(fields: [partyId], references: [id])
  partyId   String
  score     Int      @default(0)
  rengas    Renga[]
}

model Submission {
  id         Int      @default(autoincrement()) @id
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  author     User     @relation(fields: [authorId], references: [id])
  authorId   Int
  renga      Renga    @relation(fields: [rengaId], references: [id])
  rengaId    Int
  valid      Boolean  @default(false)
  movieTitle String
  movieDBId  Int
}