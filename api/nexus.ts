/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  MovieCreateOneWithoutRengasInput: { // input type
    connect?: NexusGenInputs['MovieWhereUniqueInput'] | null; // MovieWhereUniqueInput
    create?: NexusGenInputs['MovieCreateWithoutRengasInput'] | null; // MovieCreateWithoutRengasInput
  }
  MovieCreateWithoutRengasInput: { // input type
    createdAt?: any | null; // DateTime
    genres?: NexusGenInputs['MovieCreategenresInput'] | null; // MovieCreategenresInput
    movieDBId: number; // Int!
    title: string; // String!
    updatedAt?: any | null; // DateTime
    year: number; // Int!
  }
  MovieCreategenresInput: { // input type
    set?: string[] | null; // [String!]
  }
  MovieWhereUniqueInput: { // input type
    id?: number | null; // Int
    movieDBId?: number | null; // Int
  }
  PartyCreateOneWithoutRengasInput: { // input type
    connect?: NexusGenInputs['PartyWhereUniqueInput'] | null; // PartyWhereUniqueInput
    create?: NexusGenInputs['PartyCreateWithoutRengasInput'] | null; // PartyCreateWithoutRengasInput
  }
  PartyCreateOneWithoutUsersInput: { // input type
    connect?: NexusGenInputs['PartyWhereUniqueInput'] | null; // PartyWhereUniqueInput
    create?: NexusGenInputs['PartyCreateWithoutUsersInput'] | null; // PartyCreateWithoutUsersInput
  }
  PartyCreateWithoutRengasInput: { // input type
    createdAt?: any | null; // DateTime
    id: string; // String!
    updatedAt?: any | null; // DateTime
    users?: NexusGenInputs['UserCreateManyWithoutPartyInput'] | null; // UserCreateManyWithoutPartyInput
  }
  PartyCreateWithoutUsersInput: { // input type
    createdAt?: any | null; // DateTime
    id: string; // String!
    rengas?: NexusGenInputs['RengaCreateManyWithoutPartyInput'] | null; // RengaCreateManyWithoutPartyInput
    updatedAt?: any | null; // DateTime
  }
  PartyWhereUniqueInput: { // input type
    id?: string | null; // String
  }
  RengaCreateManyWithoutAuthorInput: { // input type
    connect?: NexusGenInputs['RengaWhereUniqueInput'][] | null; // [RengaWhereUniqueInput!]
    create?: NexusGenInputs['RengaCreateWithoutAuthorInput'][] | null; // [RengaCreateWithoutAuthorInput!]
  }
  RengaCreateManyWithoutPartyInput: { // input type
    connect?: NexusGenInputs['RengaWhereUniqueInput'][] | null; // [RengaWhereUniqueInput!]
    create?: NexusGenInputs['RengaCreateWithoutPartyInput'][] | null; // [RengaCreateWithoutPartyInput!]
  }
  RengaCreateOneWithoutSubmissionInput: { // input type
    connect?: NexusGenInputs['RengaWhereUniqueInput'] | null; // RengaWhereUniqueInput
    create?: NexusGenInputs['RengaCreateWithoutSubmissionInput'] | null; // RengaCreateWithoutSubmissionInput
  }
  RengaCreateWithoutAuthorInput: { // input type
    createdAt?: any | null; // DateTime
    emojis?: NexusGenInputs['RengaCreateemojisInput'] | null; // RengaCreateemojisInput
    movie: NexusGenInputs['MovieCreateOneWithoutRengasInput']; // MovieCreateOneWithoutRengasInput!
    party: NexusGenInputs['PartyCreateOneWithoutRengasInput']; // PartyCreateOneWithoutRengasInput!
    submission?: NexusGenInputs['SubmissionCreateManyWithoutRengaInput'] | null; // SubmissionCreateManyWithoutRengaInput
    updatedAt?: any | null; // DateTime
  }
  RengaCreateWithoutPartyInput: { // input type
    author: NexusGenInputs['UserCreateOneWithoutRengasInput']; // UserCreateOneWithoutRengasInput!
    createdAt?: any | null; // DateTime
    emojis?: NexusGenInputs['RengaCreateemojisInput'] | null; // RengaCreateemojisInput
    movie: NexusGenInputs['MovieCreateOneWithoutRengasInput']; // MovieCreateOneWithoutRengasInput!
    submission?: NexusGenInputs['SubmissionCreateManyWithoutRengaInput'] | null; // SubmissionCreateManyWithoutRengaInput
    updatedAt?: any | null; // DateTime
  }
  RengaCreateWithoutSubmissionInput: { // input type
    author: NexusGenInputs['UserCreateOneWithoutRengasInput']; // UserCreateOneWithoutRengasInput!
    createdAt?: any | null; // DateTime
    emojis?: NexusGenInputs['RengaCreateemojisInput'] | null; // RengaCreateemojisInput
    movie: NexusGenInputs['MovieCreateOneWithoutRengasInput']; // MovieCreateOneWithoutRengasInput!
    party: NexusGenInputs['PartyCreateOneWithoutRengasInput']; // PartyCreateOneWithoutRengasInput!
    updatedAt?: any | null; // DateTime
  }
  RengaCreateemojisInput: { // input type
    set?: string[] | null; // [String!]
  }
  RengaWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  SubmissionCreateManyWithoutAuthorInput: { // input type
    connect?: NexusGenInputs['SubmissionWhereUniqueInput'][] | null; // [SubmissionWhereUniqueInput!]
    create?: NexusGenInputs['SubmissionCreateWithoutAuthorInput'][] | null; // [SubmissionCreateWithoutAuthorInput!]
  }
  SubmissionCreateManyWithoutRengaInput: { // input type
    connect?: NexusGenInputs['SubmissionWhereUniqueInput'][] | null; // [SubmissionWhereUniqueInput!]
    create?: NexusGenInputs['SubmissionCreateWithoutRengaInput'][] | null; // [SubmissionCreateWithoutRengaInput!]
  }
  SubmissionCreateWithoutAuthorInput: { // input type
    createdAt?: any | null; // DateTime
    movieTitle: string; // String!
    renga: NexusGenInputs['RengaCreateOneWithoutSubmissionInput']; // RengaCreateOneWithoutSubmissionInput!
    updatedAt?: any | null; // DateTime
    valid?: boolean | null; // Boolean
  }
  SubmissionCreateWithoutRengaInput: { // input type
    author: NexusGenInputs['UserCreateOneWithoutSubmissionInput']; // UserCreateOneWithoutSubmissionInput!
    createdAt?: any | null; // DateTime

    movieTitle: string; // String!
    updatedAt?: any | null; // DateTime
    valid?: boolean | null; // Boolean
  }
  SubmissionWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  UserCreateInput: { // input type
    createdAt?: any | null; // DateTime
    party: NexusGenInputs['PartyCreateOneWithoutUsersInput']; // PartyCreateOneWithoutUsersInput!
    rengas?: NexusGenInputs['RengaCreateManyWithoutAuthorInput'] | null; // RengaCreateManyWithoutAuthorInput
    score?: number | null; // Int
    submission?: NexusGenInputs['SubmissionCreateManyWithoutAuthorInput'] | null; // SubmissionCreateManyWithoutAuthorInput
    updatedAt?: any | null; // DateTime
    username: string; // String!
  }
  UserCreateManyWithoutPartyInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'][] | null; // [UserWhereUniqueInput!]
    create?: NexusGenInputs['UserCreateWithoutPartyInput'][] | null; // [UserCreateWithoutPartyInput!]
  }
  UserCreateOneWithoutRengasInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
    create?: NexusGenInputs['UserCreateWithoutRengasInput'] | null; // UserCreateWithoutRengasInput
  }
  UserCreateOneWithoutSubmissionInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
    create?: NexusGenInputs['UserCreateWithoutSubmissionInput'] | null; // UserCreateWithoutSubmissionInput
  }
  UserCreateWithoutPartyInput: { // input type
    createdAt?: any | null; // DateTime
    rengas?: NexusGenInputs['RengaCreateManyWithoutAuthorInput'] | null; // RengaCreateManyWithoutAuthorInput
    score?: number | null; // Int
    submission?: NexusGenInputs['SubmissionCreateManyWithoutAuthorInput'] | null; // SubmissionCreateManyWithoutAuthorInput
    updatedAt?: any | null; // DateTime
    username: string; // String!
  }
  UserCreateWithoutRengasInput: { // input type
    createdAt?: any | null; // DateTime
    party: NexusGenInputs['PartyCreateOneWithoutUsersInput']; // PartyCreateOneWithoutUsersInput!
    score?: number | null; // Int
    submission?: NexusGenInputs['SubmissionCreateManyWithoutAuthorInput'] | null; // SubmissionCreateManyWithoutAuthorInput
    updatedAt?: any | null; // DateTime
    username: string; // String!
  }
  UserCreateWithoutSubmissionInput: { // input type
    createdAt?: any | null; // DateTime
    party: NexusGenInputs['PartyCreateOneWithoutUsersInput']; // PartyCreateOneWithoutUsersInput!
    rengas?: NexusGenInputs['RengaCreateManyWithoutAuthorInput'] | null; // RengaCreateManyWithoutAuthorInput
    score?: number | null; // Int
    updatedAt?: any | null; // DateTime
    username: string; // String!
  }
  UserWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Mutation: {};
  Party: { // root type
    id: string; // String!
  }
  Query: {};
  User: { // root type
    id: number; // Int!
    username: string; // String!
  }
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  MovieCreateOneWithoutRengasInput: NexusGenInputs['MovieCreateOneWithoutRengasInput'];
  MovieCreateWithoutRengasInput: NexusGenInputs['MovieCreateWithoutRengasInput'];
  MovieCreategenresInput: NexusGenInputs['MovieCreategenresInput'];
  MovieWhereUniqueInput: NexusGenInputs['MovieWhereUniqueInput'];
  PartyCreateOneWithoutRengasInput: NexusGenInputs['PartyCreateOneWithoutRengasInput'];
  PartyCreateOneWithoutUsersInput: NexusGenInputs['PartyCreateOneWithoutUsersInput'];
  PartyCreateWithoutRengasInput: NexusGenInputs['PartyCreateWithoutRengasInput'];
  PartyCreateWithoutUsersInput: NexusGenInputs['PartyCreateWithoutUsersInput'];
  PartyWhereUniqueInput: NexusGenInputs['PartyWhereUniqueInput'];
  RengaCreateManyWithoutAuthorInput: NexusGenInputs['RengaCreateManyWithoutAuthorInput'];
  RengaCreateManyWithoutPartyInput: NexusGenInputs['RengaCreateManyWithoutPartyInput'];
  RengaCreateOneWithoutSubmissionInput: NexusGenInputs['RengaCreateOneWithoutSubmissionInput'];
  RengaCreateWithoutAuthorInput: NexusGenInputs['RengaCreateWithoutAuthorInput'];
  RengaCreateWithoutPartyInput: NexusGenInputs['RengaCreateWithoutPartyInput'];
  RengaCreateWithoutSubmissionInput: NexusGenInputs['RengaCreateWithoutSubmissionInput'];
  RengaCreateemojisInput: NexusGenInputs['RengaCreateemojisInput'];
  RengaWhereUniqueInput: NexusGenInputs['RengaWhereUniqueInput'];
  SubmissionCreateManyWithoutAuthorInput: NexusGenInputs['SubmissionCreateManyWithoutAuthorInput'];
  SubmissionCreateManyWithoutRengaInput: NexusGenInputs['SubmissionCreateManyWithoutRengaInput'];
  SubmissionCreateWithoutAuthorInput: NexusGenInputs['SubmissionCreateWithoutAuthorInput'];
  SubmissionCreateWithoutRengaInput: NexusGenInputs['SubmissionCreateWithoutRengaInput'];
  SubmissionWhereUniqueInput: NexusGenInputs['SubmissionWhereUniqueInput'];
  UserCreateInput: NexusGenInputs['UserCreateInput'];
  UserCreateManyWithoutPartyInput: NexusGenInputs['UserCreateManyWithoutPartyInput'];
  UserCreateOneWithoutRengasInput: NexusGenInputs['UserCreateOneWithoutRengasInput'];
  UserCreateOneWithoutSubmissionInput: NexusGenInputs['UserCreateOneWithoutSubmissionInput'];
  UserCreateWithoutPartyInput: NexusGenInputs['UserCreateWithoutPartyInput'];
  UserCreateWithoutRengasInput: NexusGenInputs['UserCreateWithoutRengasInput'];
  UserCreateWithoutSubmissionInput: NexusGenInputs['UserCreateWithoutSubmissionInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
}

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createOneUser: NexusGenRootTypes['User']; // User!
    createParty: string; // String!
  }
  Party: { // field return type
    id: string; // String!
  }
  Query: { // field return type
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  User: { // field return type
    id: number; // Int!
    username: string; // String!
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createOneUser: { // args
      data: NexusGenInputs['UserCreateInput']; // UserCreateInput!
    }
    createParty: { // args
      username: string; // String!
    }
  }
  Query: {
    users: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Mutation" | "Party" | "Query" | "User";

export type NexusGenInputNames = "MovieCreateOneWithoutRengasInput" | "MovieCreateWithoutRengasInput" | "MovieCreategenresInput" | "MovieWhereUniqueInput" | "PartyCreateOneWithoutRengasInput" | "PartyCreateOneWithoutUsersInput" | "PartyCreateWithoutRengasInput" | "PartyCreateWithoutUsersInput" | "PartyWhereUniqueInput" | "RengaCreateManyWithoutAuthorInput" | "RengaCreateManyWithoutPartyInput" | "RengaCreateOneWithoutSubmissionInput" | "RengaCreateWithoutAuthorInput" | "RengaCreateWithoutPartyInput" | "RengaCreateWithoutSubmissionInput" | "RengaCreateemojisInput" | "RengaWhereUniqueInput" | "SubmissionCreateManyWithoutAuthorInput" | "SubmissionCreateManyWithoutRengaInput" | "SubmissionCreateWithoutAuthorInput" | "SubmissionCreateWithoutRengaInput" | "SubmissionWhereUniqueInput" | "UserCreateInput" | "UserCreateManyWithoutPartyInput" | "UserCreateOneWithoutRengasInput" | "UserCreateOneWithoutSubmissionInput" | "UserCreateWithoutPartyInput" | "UserCreateWithoutRengasInput" | "UserCreateWithoutSubmissionInput" | "UserWhereUniqueInput";

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}